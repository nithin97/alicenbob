/*
Input Should be
1) 1st line : no of test cases
2) Following lines : actual n values
eg:
a)1
  12

b)2
  85
  896
*/
#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<stdlib.h>
static int *a;
//function to find gcd of 2 numbers
int gcd(int m,int n)
{
	if(n==0)return m;

	return gcd(n,m%n);
}
//function to find value of a and b
void andb(int *a1,int *b1,int n)
{
	int i,count1=0,count2=0;
	for(i=1;i<=n;i++)
	{
		if((a[i]!=0) && (n%i==0))
		{
			//gcd1=gcd(i,n);
			//if(gcd1==i)
				count1++;
        }
		if((gcd(i,n))==1)
			count2++;
	}
	*(a1)=count1;
	*(b1)=count2;
	//printf("a=%d b=%d \n",*a1,*b1);
}

//function that generates prime numbers for a given range
void genprime(int n)
{
	a=(int *)malloc((n+1)*sizeof(int));
	if(a==NULL)
		printf("INSUFFICIENT MEMORY\n");

	
	 int i,p,j,m,flag=1,red=n;
	
	 float g=sqrt((float)n);
	j=g;
	for(i=0;i<=n;i++)
		*(a+i)=i;
	a[1]=0;
	for(p=2;p<=j;p++)
	{
		if(*(a+p)!=0)
		{
			m=p*p;
			while(m<=n)
			{
				*(a+m)=0;
				m=m+p;
			}
     }
}//end of prime number generation
}
//function to find largest of n numbers
int big1(int *p, int tc)
{
	int i,big;
	big=*(p+0);
	for(i=1;i<tc;i++)
	{
		
		if(*(p+i)>big)
			big=*(p+i);
	}
	return big;
}

void main()
{
     int k,flag=1,flag2,flag3=0,red,a1,b1;
	 int tc,big;
     scanf("%d",&tc);
	 if(!(tc>=1 && tc<=1000))
	 {
		 printf("NUMBER OF TEST CASES SHOULD BE BETWEEN 1 TO 1000\n");
		 
	 }
	 else{
	 int *p1=(int *) malloc(tc*sizeof(int));
	 for(k=0;k<tc;k++){
		 scanf("%d",(p1+k));
		 while(p1[k]<10 || p1[k]>1000000)
		 {
			 printf("N VALUE SHOULD BE BETWEEN 10 AND 1000000...Enter Again\n");
			 scanf("%d",(p1+k));
		 }
      }
	
	 big=big1(p1,tc);
	 genprime(big);

	 for(k=0;k<tc;k++)
	 {
		 red=*(p1+k);
		// printf("%d  ",red);
		 flag=1;
	for(;;)
	{
		andb(&a1, &b1,red);
		int r = rand() % 2;
		if(r==0){
			red=red-a1;
			flag2=1;

		}
		else{
			red=red-b1;
			flag2=0;
		}

		if(red<10)
		{
			if(flag2==1)
				red=red+a1-b1;
			else
				red=red+b1-a1;

		}
		if(red<10)
		   break;
		flag=flag*(-1);

	}//infinite for

     if(flag<0)
		printf("alice\n");
	else
		printf("bob\n");
	 }//for no of test cases
	
	 }//end of if for test case validation
	 getch();
}
